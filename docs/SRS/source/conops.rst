

The Concept of Operations (ConOps)
===================================


Current System
----------------

Time series analysis and forecasting is a powerful tool in our modern data-driven world. Because of this, time series data is in high demand in both research and in a variety of industries including meteorology, finance, power, and agriculture. As we advance our predictive schemes with innovations like machine learning and stochastic modeling, the availability of data to train and test these systems has not been able to keep up with the increased demand. Our product will address this problem head on. We plan to engineer a repository with time series in mind that will accommodate the many facets of this special class of data while maintaining an intuitive user interface and optimized data management.


Justification for a New System
-------------------------------

The need for time series data is here to stay. While buzzwords like neural networks and deep learning are now common place in science journalism, time series analysis has silently been a fundamental component of the artificial intelligence revolution of the past few decades. We see it being applied to everything from predicting effectiveness of COVID-19 lock-downs [:ref:`2<cite-2>`] to studying the effect of insulin [:ref:`3<cite-3>`]. Our repository will fill a need in the field of time series analysis and therefore advance research and industry alike.


It should be noted that there are existing repositories for time series data including UEA & UCR Time Series Classification Repository [:ref:`1<cite-1>`] and Wolfram Data Repository (Time Series) [:ref:`4<cite-4>`]. However, these repositories fall short of our costumer's needs in several ways. One major drawback of many of these systems is a lack of consistent data. To train predictive models, one often needs several datasets of high-quality data with consistent formatting. Some repos have ample data, but do not provide crucial functionality for organizing time series data such as hierarchical and set structures. We plan to design our new system so that we can avoid the shortcomings of other repositories and find a solution that caters to all of our costumers' needs.


Operational Features of the Proposed System
---------------------------------------------

The primary function of our system will be to provide a repository of time series data to train and test analysis models. Users will be able to select from a list of time series data sets with a variety of sizes, structures, and domains.

After the user has selected which time series they wish to use, our application will provide them with a set of data points for training. The user can then, if they choose, build a predictive model with the training set and make predictions for the validation set. They will then input their predicted values for the remaining points so that our program can rate the effectiveness of the predictions based on a statistically calculated "score."


User Classes
-------------


**Researchers and Time Series Analysts** 
	Both researchers and time series analysts need access to a large amount of clean, well-formatted time series data so that they can build effective predictive models. Furthermore, our application will provide functionality that will allow this class of users to evaluate their predictive models and compare with others who have done the same. This kind of feedback will create a healthy community of both cooperation and competition that will advance the field for everyone. 


**Students and Experimenters**
	By standardizing the process of getting and working with time series data, our users will be able to study and try out time series analysis without having to go through the hassle of wrangling and cleaning up data. They will also be able to learn about popular predictive schemes through the "high score" feature of our app. Although this class of users is less likely to use the evaluation component of our application, they will still find ample benefit in the availability of lots of training sets.


**Contributers**
	This class of users will be able to add time series data sets into the repository's backend framework. This is important for the altruistic contributors who would like to make more data available to their peers, but also for those who are simply looking for a clean and easy way to store their TS data. Furthermore, if there are users who want to see what kind of predictive models may work well for their specific application, they can upload data and then look at the high score page to see experimental results generated by the user classes described above.



Modes of Operation
-------------------

There will be a single mode of operation for all of our user classes. This mode is entered when users go to our website and it allows for all the functionality that is described above. Users will be able to download time series training data, evaluate predictive schemes, contribute to the repository, and view other predictive results on the high score page.

Beyond this single mode of operations, developers will have access to the source code of the application which will allow them to make any improvements or fixes to DATSR if necessary. These fixes can then be released by updating the code on the sever that hosts our application.


Operational Scenarios 
--------------------------


**Use Case #1: Retrieving Time Series Data**

	**Brief Description:** This use case describes how a user would retrieve a training set of a time series data set using our application.

	**Actors:** A user

	**Preconditions:**

		#. User must have access to a browser and must go to the URL to reach our site

	**Steps to Complete the Task:**

		#. The user will select which time series data set they wish to work with
		#. On the page where they have selected the data set, they will be able to view meta data that pertains to the set 
		#. They will then download the data into their browser's "Downloads" folder in the form of a .csv file or .dat file

	**Postconditions**
		After this task is completed, the user will have access to the training set of their selected time series data set. They can now navigate to a screen that allows them to upload predictions for the rest of the data points if they so choose. 
  

**Use Case #2: Uploading Predictions**

	**Brief Description:** This use case describes how a user would upload data produced using a predictive model to get feedback on the accuracy of their predictions.

	**Actors:** A user

	**Preconditions:**

		#. User must have access to a browser and must go to the URL to reach our site
		#. User must have made predictions based on TS data previously retrieved from the repository as detailed in the steps above.

	**Steps to Complete the Task:**
	
		#. The user will prepare their predictions as a .csv or .dat file in a format specified in the user documentation
		#. They will then upload the file to our application on the "Upload Data" page of the website
		#. The user will have the option to leave their information (e.g. name, GitHub link) for the purpose of the "high-score" charts
		#. They will receive a calculated "rating" of their predictions
		#. If their prediction is in a specified top scorers range for the given data set, they will be be placed on the score board for that data set; if they specified a name and link but did not get in the top range their name will show up on the scoreboard, but below the high scores

	**Postconditions**
		The user now has some idea of the predictive ability of the model they are testing and potentially have improved their model with the additional training data. Furthermore, the score board will have been modified in response to their submission.


**Use Case #3: Adding Data to the Repository**

	**Brief Description:** This case describes how a contributer would add a time series data set to the repository and make it available to other users of the application.

	**Actors:** A contributer, a reviewer

	**Preconditions:**

		#. Contributor must have access to a browser and must go to the URL to reach our site
		#. Contributer must have a time series data set ready in the format specified in the user documentation

	**Steps to Complete the Task:**
	
		#. The user will upload their file as a .csv or .dat to the website in the "Upload Data" page 
		#. They will then fill out the form and click "submit"
		#. The data will be sent to the backend database for review
		#. Once a reviewer has looked at the data and approved it, it will be made available to all users of the repository

	**Postconditions**
		The new TS data set will either be available in the application's repository or will have been rejected by the reviewer for not meeting the specifications/standards of DATSR.